"""Rename previews table to scrolls

Revision ID: 3412d56964a6
Revises: cb7b954d5546
Create Date: 2025-08-01 14:48:41.944572

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3412d56964a6"
down_revision: Union[str, Sequence[str], None] = "cb7b954d5546"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename table to preserve data
    op.rename_table("previews", "scrolls")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "previews",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("preview_id", sa.VARCHAR(length=20), autoincrement=False, nullable=True),
        sa.Column("title", sa.VARCHAR(length=500), autoincrement=False, nullable=False),
        sa.Column("authors", sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
        sa.Column("abstract", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("keywords", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
        sa.Column("html_content", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("status", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.Column("version", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "published_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("subject_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("content_type", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("original_filename", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("file_size", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "upload_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "external_resources",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("validation_status", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.Column(
            "sanitization_log",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["subject_id"], ["subjects.id"], name=op.f("previews_subject_id_fkey")
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name=op.f("previews_user_id_fkey")),
        sa.PrimaryKeyConstraint("id", name=op.f("previews_pkey")),
        sa.UniqueConstraint(
            "preview_id",
            name=op.f("previews_preview_id_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.drop_table("scrolls")
    # ### end Alembic commands ###
